
DIODrv.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008ec  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         0000072c  00000000  00000000  00000940  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000451  00000000  00000000  0000106c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 67 04 	call	0x8ce	; 0x8ce <main>
  64:	0c 94 74 04 	jmp	0x8e8	; 0x8e8 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_vidSetPinDir>:

// use port number A,B,C,D
// use pin number PIN0..7
//use direction INPUT , OUTPUT , INPULLUP

void DIO_vidSetPinDir(uint8 port_no , uint8 pin_no , uint8 dir) {
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_vidSetPinDir+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_vidSetPinDir+0x8>
  74:	0f 92       	push	r0
  76:	cd b7       	in	r28, 0x3d	; 61
  78:	de b7       	in	r29, 0x3e	; 62
  7a:	89 83       	std	Y+1, r24	; 0x01
  7c:	6a 83       	std	Y+2, r22	; 0x02
  7e:	4b 83       	std	Y+3, r20	; 0x03
	switch(port_no) {
  80:	89 81       	ldd	r24, Y+1	; 0x01
  82:	28 2f       	mov	r18, r24
  84:	30 e0       	ldi	r19, 0x00	; 0
  86:	3d 83       	std	Y+5, r19	; 0x05
  88:	2c 83       	std	Y+4, r18	; 0x04
  8a:	8c 81       	ldd	r24, Y+4	; 0x04
  8c:	9d 81       	ldd	r25, Y+5	; 0x05
  8e:	82 30       	cpi	r24, 0x02	; 2
  90:	91 05       	cpc	r25, r1
  92:	09 f4       	brne	.+2      	; 0x96 <DIO_vidSetPinDir+0x2a>
  94:	72 c0       	rjmp	.+228    	; 0x17a <DIO_vidSetPinDir+0x10e>
  96:	2c 81       	ldd	r18, Y+4	; 0x04
  98:	3d 81       	ldd	r19, Y+5	; 0x05
  9a:	23 30       	cpi	r18, 0x03	; 3
  9c:	31 05       	cpc	r19, r1
  9e:	34 f4       	brge	.+12     	; 0xac <DIO_vidSetPinDir+0x40>
  a0:	8c 81       	ldd	r24, Y+4	; 0x04
  a2:	9d 81       	ldd	r25, Y+5	; 0x05
  a4:	81 30       	cpi	r24, 0x01	; 1
  a6:	91 05       	cpc	r25, r1
  a8:	71 f0       	breq	.+28     	; 0xc6 <DIO_vidSetPinDir+0x5a>
  aa:	73 c1       	rjmp	.+742    	; 0x392 <DIO_vidSetPinDir+0x326>
  ac:	2c 81       	ldd	r18, Y+4	; 0x04
  ae:	3d 81       	ldd	r19, Y+5	; 0x05
  b0:	23 30       	cpi	r18, 0x03	; 3
  b2:	31 05       	cpc	r19, r1
  b4:	09 f4       	brne	.+2      	; 0xb8 <DIO_vidSetPinDir+0x4c>
  b6:	bb c0       	rjmp	.+374    	; 0x22e <DIO_vidSetPinDir+0x1c2>
  b8:	8c 81       	ldd	r24, Y+4	; 0x04
  ba:	9d 81       	ldd	r25, Y+5	; 0x05
  bc:	84 30       	cpi	r24, 0x04	; 4
  be:	91 05       	cpc	r25, r1
  c0:	09 f4       	brne	.+2      	; 0xc4 <DIO_vidSetPinDir+0x58>
  c2:	0f c1       	rjmp	.+542    	; 0x2e2 <DIO_vidSetPinDir+0x276>
  c4:	66 c1       	rjmp	.+716    	; 0x392 <DIO_vidSetPinDir+0x326>
	case A:
		if (dir==0) ClrBit(DDRA,pin_no);
  c6:	8b 81       	ldd	r24, Y+3	; 0x03
  c8:	88 23       	and	r24, r24
  ca:	a9 f4       	brne	.+42     	; 0xf6 <DIO_vidSetPinDir+0x8a>
  cc:	aa e3       	ldi	r26, 0x3A	; 58
  ce:	b0 e0       	ldi	r27, 0x00	; 0
  d0:	ea e3       	ldi	r30, 0x3A	; 58
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	80 81       	ld	r24, Z
  d6:	48 2f       	mov	r20, r24
  d8:	8a 81       	ldd	r24, Y+2	; 0x02
  da:	28 2f       	mov	r18, r24
  dc:	30 e0       	ldi	r19, 0x00	; 0
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	02 2e       	mov	r0, r18
  e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_vidSetPinDir+0x7e>
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	0a 94       	dec	r0
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <DIO_vidSetPinDir+0x7a>
  ee:	80 95       	com	r24
  f0:	84 23       	and	r24, r20
  f2:	8c 93       	st	X, r24
  f4:	4e c1       	rjmp	.+668    	; 0x392 <DIO_vidSetPinDir+0x326>
		else if (dir==1) SetBit(DDRA,pin_no);
  f6:	8b 81       	ldd	r24, Y+3	; 0x03
  f8:	81 30       	cpi	r24, 0x01	; 1
  fa:	a1 f4       	brne	.+40     	; 0x124 <DIO_vidSetPinDir+0xb8>
  fc:	aa e3       	ldi	r26, 0x3A	; 58
  fe:	b0 e0       	ldi	r27, 0x00	; 0
 100:	ea e3       	ldi	r30, 0x3A	; 58
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	48 2f       	mov	r20, r24
 108:	8a 81       	ldd	r24, Y+2	; 0x02
 10a:	28 2f       	mov	r18, r24
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	02 2e       	mov	r0, r18
 114:	02 c0       	rjmp	.+4      	; 0x11a <DIO_vidSetPinDir+0xae>
 116:	88 0f       	add	r24, r24
 118:	99 1f       	adc	r25, r25
 11a:	0a 94       	dec	r0
 11c:	e2 f7       	brpl	.-8      	; 0x116 <DIO_vidSetPinDir+0xaa>
 11e:	84 2b       	or	r24, r20
 120:	8c 93       	st	X, r24
 122:	37 c1       	rjmp	.+622    	; 0x392 <DIO_vidSetPinDir+0x326>
		else if (dir==2) {ClrBit(DDRA,pin_no); SetBit(PORTA,pin_no);}
 124:	8b 81       	ldd	r24, Y+3	; 0x03
 126:	82 30       	cpi	r24, 0x02	; 2
 128:	09 f0       	breq	.+2      	; 0x12c <DIO_vidSetPinDir+0xc0>
 12a:	33 c1       	rjmp	.+614    	; 0x392 <DIO_vidSetPinDir+0x326>
 12c:	aa e3       	ldi	r26, 0x3A	; 58
 12e:	b0 e0       	ldi	r27, 0x00	; 0
 130:	ea e3       	ldi	r30, 0x3A	; 58
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	48 2f       	mov	r20, r24
 138:	8a 81       	ldd	r24, Y+2	; 0x02
 13a:	28 2f       	mov	r18, r24
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	02 c0       	rjmp	.+4      	; 0x148 <DIO_vidSetPinDir+0xdc>
 144:	88 0f       	add	r24, r24
 146:	99 1f       	adc	r25, r25
 148:	2a 95       	dec	r18
 14a:	e2 f7       	brpl	.-8      	; 0x144 <DIO_vidSetPinDir+0xd8>
 14c:	80 95       	com	r24
 14e:	84 23       	and	r24, r20
 150:	8c 93       	st	X, r24
 152:	ab e3       	ldi	r26, 0x3B	; 59
 154:	b0 e0       	ldi	r27, 0x00	; 0
 156:	eb e3       	ldi	r30, 0x3B	; 59
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	80 81       	ld	r24, Z
 15c:	48 2f       	mov	r20, r24
 15e:	8a 81       	ldd	r24, Y+2	; 0x02
 160:	28 2f       	mov	r18, r24
 162:	30 e0       	ldi	r19, 0x00	; 0
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	02 2e       	mov	r0, r18
 16a:	02 c0       	rjmp	.+4      	; 0x170 <DIO_vidSetPinDir+0x104>
 16c:	88 0f       	add	r24, r24
 16e:	99 1f       	adc	r25, r25
 170:	0a 94       	dec	r0
 172:	e2 f7       	brpl	.-8      	; 0x16c <DIO_vidSetPinDir+0x100>
 174:	84 2b       	or	r24, r20
 176:	8c 93       	st	X, r24
 178:	0c c1       	rjmp	.+536    	; 0x392 <DIO_vidSetPinDir+0x326>
		break;
	case B:
			if (dir==0) ClrBit(DDRB,pin_no);
 17a:	8b 81       	ldd	r24, Y+3	; 0x03
 17c:	88 23       	and	r24, r24
 17e:	a9 f4       	brne	.+42     	; 0x1aa <DIO_vidSetPinDir+0x13e>
 180:	a7 e3       	ldi	r26, 0x37	; 55
 182:	b0 e0       	ldi	r27, 0x00	; 0
 184:	e7 e3       	ldi	r30, 0x37	; 55
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	80 81       	ld	r24, Z
 18a:	48 2f       	mov	r20, r24
 18c:	8a 81       	ldd	r24, Y+2	; 0x02
 18e:	28 2f       	mov	r18, r24
 190:	30 e0       	ldi	r19, 0x00	; 0
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	02 2e       	mov	r0, r18
 198:	02 c0       	rjmp	.+4      	; 0x19e <DIO_vidSetPinDir+0x132>
 19a:	88 0f       	add	r24, r24
 19c:	99 1f       	adc	r25, r25
 19e:	0a 94       	dec	r0
 1a0:	e2 f7       	brpl	.-8      	; 0x19a <DIO_vidSetPinDir+0x12e>
 1a2:	80 95       	com	r24
 1a4:	84 23       	and	r24, r20
 1a6:	8c 93       	st	X, r24
 1a8:	f4 c0       	rjmp	.+488    	; 0x392 <DIO_vidSetPinDir+0x326>
			else if (dir==1) SetBit(DDRB,pin_no);
 1aa:	8b 81       	ldd	r24, Y+3	; 0x03
 1ac:	81 30       	cpi	r24, 0x01	; 1
 1ae:	a1 f4       	brne	.+40     	; 0x1d8 <DIO_vidSetPinDir+0x16c>
 1b0:	a7 e3       	ldi	r26, 0x37	; 55
 1b2:	b0 e0       	ldi	r27, 0x00	; 0
 1b4:	e7 e3       	ldi	r30, 0x37	; 55
 1b6:	f0 e0       	ldi	r31, 0x00	; 0
 1b8:	80 81       	ld	r24, Z
 1ba:	48 2f       	mov	r20, r24
 1bc:	8a 81       	ldd	r24, Y+2	; 0x02
 1be:	28 2f       	mov	r18, r24
 1c0:	30 e0       	ldi	r19, 0x00	; 0
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 2e       	mov	r0, r18
 1c8:	02 c0       	rjmp	.+4      	; 0x1ce <DIO_vidSetPinDir+0x162>
 1ca:	88 0f       	add	r24, r24
 1cc:	99 1f       	adc	r25, r25
 1ce:	0a 94       	dec	r0
 1d0:	e2 f7       	brpl	.-8      	; 0x1ca <DIO_vidSetPinDir+0x15e>
 1d2:	84 2b       	or	r24, r20
 1d4:	8c 93       	st	X, r24
 1d6:	dd c0       	rjmp	.+442    	; 0x392 <DIO_vidSetPinDir+0x326>
			else if (dir==2) {ClrBit(DDRB,pin_no); SetBit(PORTB,pin_no);}
 1d8:	8b 81       	ldd	r24, Y+3	; 0x03
 1da:	82 30       	cpi	r24, 0x02	; 2
 1dc:	09 f0       	breq	.+2      	; 0x1e0 <DIO_vidSetPinDir+0x174>
 1de:	d9 c0       	rjmp	.+434    	; 0x392 <DIO_vidSetPinDir+0x326>
 1e0:	a7 e3       	ldi	r26, 0x37	; 55
 1e2:	b0 e0       	ldi	r27, 0x00	; 0
 1e4:	e7 e3       	ldi	r30, 0x37	; 55
 1e6:	f0 e0       	ldi	r31, 0x00	; 0
 1e8:	80 81       	ld	r24, Z
 1ea:	48 2f       	mov	r20, r24
 1ec:	8a 81       	ldd	r24, Y+2	; 0x02
 1ee:	28 2f       	mov	r18, r24
 1f0:	30 e0       	ldi	r19, 0x00	; 0
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	02 c0       	rjmp	.+4      	; 0x1fc <DIO_vidSetPinDir+0x190>
 1f8:	88 0f       	add	r24, r24
 1fa:	99 1f       	adc	r25, r25
 1fc:	2a 95       	dec	r18
 1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <DIO_vidSetPinDir+0x18c>
 200:	80 95       	com	r24
 202:	84 23       	and	r24, r20
 204:	8c 93       	st	X, r24
 206:	a8 e3       	ldi	r26, 0x38	; 56
 208:	b0 e0       	ldi	r27, 0x00	; 0
 20a:	e8 e3       	ldi	r30, 0x38	; 56
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	80 81       	ld	r24, Z
 210:	48 2f       	mov	r20, r24
 212:	8a 81       	ldd	r24, Y+2	; 0x02
 214:	28 2f       	mov	r18, r24
 216:	30 e0       	ldi	r19, 0x00	; 0
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 2e       	mov	r0, r18
 21e:	02 c0       	rjmp	.+4      	; 0x224 <DIO_vidSetPinDir+0x1b8>
 220:	88 0f       	add	r24, r24
 222:	99 1f       	adc	r25, r25
 224:	0a 94       	dec	r0
 226:	e2 f7       	brpl	.-8      	; 0x220 <DIO_vidSetPinDir+0x1b4>
 228:	84 2b       	or	r24, r20
 22a:	8c 93       	st	X, r24
 22c:	b2 c0       	rjmp	.+356    	; 0x392 <DIO_vidSetPinDir+0x326>
			break;
	case C:
			if (dir==0) ClrBit(DDRC,pin_no);
 22e:	8b 81       	ldd	r24, Y+3	; 0x03
 230:	88 23       	and	r24, r24
 232:	a9 f4       	brne	.+42     	; 0x25e <DIO_vidSetPinDir+0x1f2>
 234:	a4 e3       	ldi	r26, 0x34	; 52
 236:	b0 e0       	ldi	r27, 0x00	; 0
 238:	e4 e3       	ldi	r30, 0x34	; 52
 23a:	f0 e0       	ldi	r31, 0x00	; 0
 23c:	80 81       	ld	r24, Z
 23e:	48 2f       	mov	r20, r24
 240:	8a 81       	ldd	r24, Y+2	; 0x02
 242:	28 2f       	mov	r18, r24
 244:	30 e0       	ldi	r19, 0x00	; 0
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	02 2e       	mov	r0, r18
 24c:	02 c0       	rjmp	.+4      	; 0x252 <DIO_vidSetPinDir+0x1e6>
 24e:	88 0f       	add	r24, r24
 250:	99 1f       	adc	r25, r25
 252:	0a 94       	dec	r0
 254:	e2 f7       	brpl	.-8      	; 0x24e <DIO_vidSetPinDir+0x1e2>
 256:	80 95       	com	r24
 258:	84 23       	and	r24, r20
 25a:	8c 93       	st	X, r24
 25c:	9a c0       	rjmp	.+308    	; 0x392 <DIO_vidSetPinDir+0x326>
			else if (dir==1) SetBit(DDRC,pin_no);
 25e:	8b 81       	ldd	r24, Y+3	; 0x03
 260:	81 30       	cpi	r24, 0x01	; 1
 262:	a1 f4       	brne	.+40     	; 0x28c <DIO_vidSetPinDir+0x220>
 264:	a4 e3       	ldi	r26, 0x34	; 52
 266:	b0 e0       	ldi	r27, 0x00	; 0
 268:	e4 e3       	ldi	r30, 0x34	; 52
 26a:	f0 e0       	ldi	r31, 0x00	; 0
 26c:	80 81       	ld	r24, Z
 26e:	48 2f       	mov	r20, r24
 270:	8a 81       	ldd	r24, Y+2	; 0x02
 272:	28 2f       	mov	r18, r24
 274:	30 e0       	ldi	r19, 0x00	; 0
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	02 2e       	mov	r0, r18
 27c:	02 c0       	rjmp	.+4      	; 0x282 <DIO_vidSetPinDir+0x216>
 27e:	88 0f       	add	r24, r24
 280:	99 1f       	adc	r25, r25
 282:	0a 94       	dec	r0
 284:	e2 f7       	brpl	.-8      	; 0x27e <DIO_vidSetPinDir+0x212>
 286:	84 2b       	or	r24, r20
 288:	8c 93       	st	X, r24
 28a:	83 c0       	rjmp	.+262    	; 0x392 <DIO_vidSetPinDir+0x326>
			else if (dir==2) {ClrBit(DDRC,pin_no); SetBit(PORTC,pin_no);}
 28c:	8b 81       	ldd	r24, Y+3	; 0x03
 28e:	82 30       	cpi	r24, 0x02	; 2
 290:	09 f0       	breq	.+2      	; 0x294 <DIO_vidSetPinDir+0x228>
 292:	7f c0       	rjmp	.+254    	; 0x392 <DIO_vidSetPinDir+0x326>
 294:	a4 e3       	ldi	r26, 0x34	; 52
 296:	b0 e0       	ldi	r27, 0x00	; 0
 298:	e4 e3       	ldi	r30, 0x34	; 52
 29a:	f0 e0       	ldi	r31, 0x00	; 0
 29c:	80 81       	ld	r24, Z
 29e:	48 2f       	mov	r20, r24
 2a0:	8a 81       	ldd	r24, Y+2	; 0x02
 2a2:	28 2f       	mov	r18, r24
 2a4:	30 e0       	ldi	r19, 0x00	; 0
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <DIO_vidSetPinDir+0x244>
 2ac:	88 0f       	add	r24, r24
 2ae:	99 1f       	adc	r25, r25
 2b0:	2a 95       	dec	r18
 2b2:	e2 f7       	brpl	.-8      	; 0x2ac <DIO_vidSetPinDir+0x240>
 2b4:	80 95       	com	r24
 2b6:	84 23       	and	r24, r20
 2b8:	8c 93       	st	X, r24
 2ba:	a5 e3       	ldi	r26, 0x35	; 53
 2bc:	b0 e0       	ldi	r27, 0x00	; 0
 2be:	e5 e3       	ldi	r30, 0x35	; 53
 2c0:	f0 e0       	ldi	r31, 0x00	; 0
 2c2:	80 81       	ld	r24, Z
 2c4:	48 2f       	mov	r20, r24
 2c6:	8a 81       	ldd	r24, Y+2	; 0x02
 2c8:	28 2f       	mov	r18, r24
 2ca:	30 e0       	ldi	r19, 0x00	; 0
 2cc:	81 e0       	ldi	r24, 0x01	; 1
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	02 2e       	mov	r0, r18
 2d2:	02 c0       	rjmp	.+4      	; 0x2d8 <DIO_vidSetPinDir+0x26c>
 2d4:	88 0f       	add	r24, r24
 2d6:	99 1f       	adc	r25, r25
 2d8:	0a 94       	dec	r0
 2da:	e2 f7       	brpl	.-8      	; 0x2d4 <DIO_vidSetPinDir+0x268>
 2dc:	84 2b       	or	r24, r20
 2de:	8c 93       	st	X, r24
 2e0:	58 c0       	rjmp	.+176    	; 0x392 <DIO_vidSetPinDir+0x326>
			break;
	case D:
			if (dir==0) ClrBit(DDRD,pin_no);
 2e2:	8b 81       	ldd	r24, Y+3	; 0x03
 2e4:	88 23       	and	r24, r24
 2e6:	a9 f4       	brne	.+42     	; 0x312 <DIO_vidSetPinDir+0x2a6>
 2e8:	a1 e3       	ldi	r26, 0x31	; 49
 2ea:	b0 e0       	ldi	r27, 0x00	; 0
 2ec:	e1 e3       	ldi	r30, 0x31	; 49
 2ee:	f0 e0       	ldi	r31, 0x00	; 0
 2f0:	80 81       	ld	r24, Z
 2f2:	48 2f       	mov	r20, r24
 2f4:	8a 81       	ldd	r24, Y+2	; 0x02
 2f6:	28 2f       	mov	r18, r24
 2f8:	30 e0       	ldi	r19, 0x00	; 0
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	02 2e       	mov	r0, r18
 300:	02 c0       	rjmp	.+4      	; 0x306 <DIO_vidSetPinDir+0x29a>
 302:	88 0f       	add	r24, r24
 304:	99 1f       	adc	r25, r25
 306:	0a 94       	dec	r0
 308:	e2 f7       	brpl	.-8      	; 0x302 <DIO_vidSetPinDir+0x296>
 30a:	80 95       	com	r24
 30c:	84 23       	and	r24, r20
 30e:	8c 93       	st	X, r24
 310:	40 c0       	rjmp	.+128    	; 0x392 <DIO_vidSetPinDir+0x326>
			else if (dir==1) SetBit(DDRD,pin_no);
 312:	8b 81       	ldd	r24, Y+3	; 0x03
 314:	81 30       	cpi	r24, 0x01	; 1
 316:	a1 f4       	brne	.+40     	; 0x340 <DIO_vidSetPinDir+0x2d4>
 318:	a1 e3       	ldi	r26, 0x31	; 49
 31a:	b0 e0       	ldi	r27, 0x00	; 0
 31c:	e1 e3       	ldi	r30, 0x31	; 49
 31e:	f0 e0       	ldi	r31, 0x00	; 0
 320:	80 81       	ld	r24, Z
 322:	48 2f       	mov	r20, r24
 324:	8a 81       	ldd	r24, Y+2	; 0x02
 326:	28 2f       	mov	r18, r24
 328:	30 e0       	ldi	r19, 0x00	; 0
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	02 2e       	mov	r0, r18
 330:	02 c0       	rjmp	.+4      	; 0x336 <DIO_vidSetPinDir+0x2ca>
 332:	88 0f       	add	r24, r24
 334:	99 1f       	adc	r25, r25
 336:	0a 94       	dec	r0
 338:	e2 f7       	brpl	.-8      	; 0x332 <DIO_vidSetPinDir+0x2c6>
 33a:	84 2b       	or	r24, r20
 33c:	8c 93       	st	X, r24
 33e:	29 c0       	rjmp	.+82     	; 0x392 <DIO_vidSetPinDir+0x326>
			else if (dir==2) {ClrBit(DDRD,pin_no); SetBit(PORTD,pin_no);}
 340:	8b 81       	ldd	r24, Y+3	; 0x03
 342:	82 30       	cpi	r24, 0x02	; 2
 344:	31 f5       	brne	.+76     	; 0x392 <DIO_vidSetPinDir+0x326>
 346:	a1 e3       	ldi	r26, 0x31	; 49
 348:	b0 e0       	ldi	r27, 0x00	; 0
 34a:	e1 e3       	ldi	r30, 0x31	; 49
 34c:	f0 e0       	ldi	r31, 0x00	; 0
 34e:	80 81       	ld	r24, Z
 350:	48 2f       	mov	r20, r24
 352:	8a 81       	ldd	r24, Y+2	; 0x02
 354:	28 2f       	mov	r18, r24
 356:	30 e0       	ldi	r19, 0x00	; 0
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	02 c0       	rjmp	.+4      	; 0x362 <DIO_vidSetPinDir+0x2f6>
 35e:	88 0f       	add	r24, r24
 360:	99 1f       	adc	r25, r25
 362:	2a 95       	dec	r18
 364:	e2 f7       	brpl	.-8      	; 0x35e <DIO_vidSetPinDir+0x2f2>
 366:	80 95       	com	r24
 368:	84 23       	and	r24, r20
 36a:	8c 93       	st	X, r24
 36c:	a2 e3       	ldi	r26, 0x32	; 50
 36e:	b0 e0       	ldi	r27, 0x00	; 0
 370:	e2 e3       	ldi	r30, 0x32	; 50
 372:	f0 e0       	ldi	r31, 0x00	; 0
 374:	80 81       	ld	r24, Z
 376:	48 2f       	mov	r20, r24
 378:	8a 81       	ldd	r24, Y+2	; 0x02
 37a:	28 2f       	mov	r18, r24
 37c:	30 e0       	ldi	r19, 0x00	; 0
 37e:	81 e0       	ldi	r24, 0x01	; 1
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	02 2e       	mov	r0, r18
 384:	02 c0       	rjmp	.+4      	; 0x38a <DIO_vidSetPinDir+0x31e>
 386:	88 0f       	add	r24, r24
 388:	99 1f       	adc	r25, r25
 38a:	0a 94       	dec	r0
 38c:	e2 f7       	brpl	.-8      	; 0x386 <DIO_vidSetPinDir+0x31a>
 38e:	84 2b       	or	r24, r20
 390:	8c 93       	st	X, r24
			break;
	}
}
 392:	0f 90       	pop	r0
 394:	0f 90       	pop	r0
 396:	0f 90       	pop	r0
 398:	0f 90       	pop	r0
 39a:	0f 90       	pop	r0
 39c:	cf 91       	pop	r28
 39e:	df 91       	pop	r29
 3a0:	08 95       	ret

000003a2 <DIO_vidSetPortDirMask>:

void DIO_vidSetPortDirMask(uint8 port_no , uint8 DirMask) {
 3a2:	df 93       	push	r29
 3a4:	cf 93       	push	r28
 3a6:	00 d0       	rcall	.+0      	; 0x3a8 <DIO_vidSetPortDirMask+0x6>
 3a8:	00 d0       	rcall	.+0      	; 0x3aa <DIO_vidSetPortDirMask+0x8>
 3aa:	cd b7       	in	r28, 0x3d	; 61
 3ac:	de b7       	in	r29, 0x3e	; 62
 3ae:	89 83       	std	Y+1, r24	; 0x01
 3b0:	6a 83       	std	Y+2, r22	; 0x02
	switch (port_no){
 3b2:	89 81       	ldd	r24, Y+1	; 0x01
 3b4:	28 2f       	mov	r18, r24
 3b6:	30 e0       	ldi	r19, 0x00	; 0
 3b8:	3c 83       	std	Y+4, r19	; 0x04
 3ba:	2b 83       	std	Y+3, r18	; 0x03
 3bc:	8b 81       	ldd	r24, Y+3	; 0x03
 3be:	9c 81       	ldd	r25, Y+4	; 0x04
 3c0:	82 30       	cpi	r24, 0x02	; 2
 3c2:	91 05       	cpc	r25, r1
 3c4:	d9 f0       	breq	.+54     	; 0x3fc <DIO_vidSetPortDirMask+0x5a>
 3c6:	2b 81       	ldd	r18, Y+3	; 0x03
 3c8:	3c 81       	ldd	r19, Y+4	; 0x04
 3ca:	23 30       	cpi	r18, 0x03	; 3
 3cc:	31 05       	cpc	r19, r1
 3ce:	34 f4       	brge	.+12     	; 0x3dc <DIO_vidSetPortDirMask+0x3a>
 3d0:	8b 81       	ldd	r24, Y+3	; 0x03
 3d2:	9c 81       	ldd	r25, Y+4	; 0x04
 3d4:	81 30       	cpi	r24, 0x01	; 1
 3d6:	91 05       	cpc	r25, r1
 3d8:	61 f0       	breq	.+24     	; 0x3f2 <DIO_vidSetPortDirMask+0x50>
 3da:	1e c0       	rjmp	.+60     	; 0x418 <DIO_vidSetPortDirMask+0x76>
 3dc:	2b 81       	ldd	r18, Y+3	; 0x03
 3de:	3c 81       	ldd	r19, Y+4	; 0x04
 3e0:	23 30       	cpi	r18, 0x03	; 3
 3e2:	31 05       	cpc	r19, r1
 3e4:	81 f0       	breq	.+32     	; 0x406 <DIO_vidSetPortDirMask+0x64>
 3e6:	8b 81       	ldd	r24, Y+3	; 0x03
 3e8:	9c 81       	ldd	r25, Y+4	; 0x04
 3ea:	84 30       	cpi	r24, 0x04	; 4
 3ec:	91 05       	cpc	r25, r1
 3ee:	81 f0       	breq	.+32     	; 0x410 <DIO_vidSetPortDirMask+0x6e>
 3f0:	13 c0       	rjmp	.+38     	; 0x418 <DIO_vidSetPortDirMask+0x76>
	case A:
			DDRA=DirMask;
 3f2:	ea e3       	ldi	r30, 0x3A	; 58
 3f4:	f0 e0       	ldi	r31, 0x00	; 0
 3f6:	8a 81       	ldd	r24, Y+2	; 0x02
 3f8:	80 83       	st	Z, r24
 3fa:	0e c0       	rjmp	.+28     	; 0x418 <DIO_vidSetPortDirMask+0x76>
			break;
	case B:
			DDRB=DirMask;
 3fc:	e7 e3       	ldi	r30, 0x37	; 55
 3fe:	f0 e0       	ldi	r31, 0x00	; 0
 400:	8a 81       	ldd	r24, Y+2	; 0x02
 402:	80 83       	st	Z, r24
 404:	09 c0       	rjmp	.+18     	; 0x418 <DIO_vidSetPortDirMask+0x76>
			break;
	case C:
			DDRC=DirMask;
 406:	e4 e3       	ldi	r30, 0x34	; 52
 408:	f0 e0       	ldi	r31, 0x00	; 0
 40a:	8a 81       	ldd	r24, Y+2	; 0x02
 40c:	80 83       	st	Z, r24
 40e:	04 c0       	rjmp	.+8      	; 0x418 <DIO_vidSetPortDirMask+0x76>
			break;
	case D:
			DDRD=DirMask;
 410:	e1 e3       	ldi	r30, 0x31	; 49
 412:	f0 e0       	ldi	r31, 0x00	; 0
 414:	8a 81       	ldd	r24, Y+2	; 0x02
 416:	80 83       	st	Z, r24
			break;
	}
}
 418:	0f 90       	pop	r0
 41a:	0f 90       	pop	r0
 41c:	0f 90       	pop	r0
 41e:	0f 90       	pop	r0
 420:	cf 91       	pop	r28
 422:	df 91       	pop	r29
 424:	08 95       	ret

00000426 <DIO_vidSetPortDir>:

void DIO_vidSetPortDir(uint8 port_no , uint8 dir) {
 426:	df 93       	push	r29
 428:	cf 93       	push	r28
 42a:	00 d0       	rcall	.+0      	; 0x42c <DIO_vidSetPortDir+0x6>
 42c:	00 d0       	rcall	.+0      	; 0x42e <DIO_vidSetPortDir+0x8>
 42e:	cd b7       	in	r28, 0x3d	; 61
 430:	de b7       	in	r29, 0x3e	; 62
 432:	89 83       	std	Y+1, r24	; 0x01
 434:	6a 83       	std	Y+2, r22	; 0x02
	switch (port_no){
 436:	89 81       	ldd	r24, Y+1	; 0x01
 438:	28 2f       	mov	r18, r24
 43a:	30 e0       	ldi	r19, 0x00	; 0
 43c:	3c 83       	std	Y+4, r19	; 0x04
 43e:	2b 83       	std	Y+3, r18	; 0x03
 440:	8b 81       	ldd	r24, Y+3	; 0x03
 442:	9c 81       	ldd	r25, Y+4	; 0x04
 444:	82 30       	cpi	r24, 0x02	; 2
 446:	91 05       	cpc	r25, r1
 448:	91 f1       	breq	.+100    	; 0x4ae <DIO_vidSetPortDir+0x88>
 44a:	2b 81       	ldd	r18, Y+3	; 0x03
 44c:	3c 81       	ldd	r19, Y+4	; 0x04
 44e:	23 30       	cpi	r18, 0x03	; 3
 450:	31 05       	cpc	r19, r1
 452:	34 f4       	brge	.+12     	; 0x460 <DIO_vidSetPortDir+0x3a>
 454:	8b 81       	ldd	r24, Y+3	; 0x03
 456:	9c 81       	ldd	r25, Y+4	; 0x04
 458:	81 30       	cpi	r24, 0x01	; 1
 45a:	91 05       	cpc	r25, r1
 45c:	69 f0       	breq	.+26     	; 0x478 <DIO_vidSetPortDir+0x52>
 45e:	74 c0       	rjmp	.+232    	; 0x548 <DIO_vidSetPortDir+0x122>
 460:	2b 81       	ldd	r18, Y+3	; 0x03
 462:	3c 81       	ldd	r19, Y+4	; 0x04
 464:	23 30       	cpi	r18, 0x03	; 3
 466:	31 05       	cpc	r19, r1
 468:	e1 f1       	breq	.+120    	; 0x4e2 <DIO_vidSetPortDir+0xbc>
 46a:	8b 81       	ldd	r24, Y+3	; 0x03
 46c:	9c 81       	ldd	r25, Y+4	; 0x04
 46e:	84 30       	cpi	r24, 0x04	; 4
 470:	91 05       	cpc	r25, r1
 472:	09 f4       	brne	.+2      	; 0x476 <DIO_vidSetPortDir+0x50>
 474:	50 c0       	rjmp	.+160    	; 0x516 <DIO_vidSetPortDir+0xf0>
 476:	68 c0       	rjmp	.+208    	; 0x548 <DIO_vidSetPortDir+0x122>
	case A:
		if (dir==0)      {DDRA=0;}
 478:	8a 81       	ldd	r24, Y+2	; 0x02
 47a:	88 23       	and	r24, r24
 47c:	21 f4       	brne	.+8      	; 0x486 <DIO_vidSetPortDir+0x60>
 47e:	ea e3       	ldi	r30, 0x3A	; 58
 480:	f0 e0       	ldi	r31, 0x00	; 0
 482:	10 82       	st	Z, r1
 484:	61 c0       	rjmp	.+194    	; 0x548 <DIO_vidSetPortDir+0x122>
		else if (dir==1) {DDRA=0xFF;}
 486:	8a 81       	ldd	r24, Y+2	; 0x02
 488:	81 30       	cpi	r24, 0x01	; 1
 48a:	29 f4       	brne	.+10     	; 0x496 <DIO_vidSetPortDir+0x70>
 48c:	ea e3       	ldi	r30, 0x3A	; 58
 48e:	f0 e0       	ldi	r31, 0x00	; 0
 490:	8f ef       	ldi	r24, 0xFF	; 255
 492:	80 83       	st	Z, r24
 494:	59 c0       	rjmp	.+178    	; 0x548 <DIO_vidSetPortDir+0x122>
		else if (dir==2) {DDRA=0; PORTA=0xFF;}
 496:	8a 81       	ldd	r24, Y+2	; 0x02
 498:	82 30       	cpi	r24, 0x02	; 2
 49a:	09 f0       	breq	.+2      	; 0x49e <DIO_vidSetPortDir+0x78>
 49c:	55 c0       	rjmp	.+170    	; 0x548 <DIO_vidSetPortDir+0x122>
 49e:	ea e3       	ldi	r30, 0x3A	; 58
 4a0:	f0 e0       	ldi	r31, 0x00	; 0
 4a2:	10 82       	st	Z, r1
 4a4:	eb e3       	ldi	r30, 0x3B	; 59
 4a6:	f0 e0       	ldi	r31, 0x00	; 0
 4a8:	8f ef       	ldi	r24, 0xFF	; 255
 4aa:	80 83       	st	Z, r24
 4ac:	4d c0       	rjmp	.+154    	; 0x548 <DIO_vidSetPortDir+0x122>
		break;
	case B:
		if (dir==0)      {DDRB=0;}
 4ae:	8a 81       	ldd	r24, Y+2	; 0x02
 4b0:	88 23       	and	r24, r24
 4b2:	21 f4       	brne	.+8      	; 0x4bc <DIO_vidSetPortDir+0x96>
 4b4:	e7 e3       	ldi	r30, 0x37	; 55
 4b6:	f0 e0       	ldi	r31, 0x00	; 0
 4b8:	10 82       	st	Z, r1
 4ba:	46 c0       	rjmp	.+140    	; 0x548 <DIO_vidSetPortDir+0x122>
		else if (dir==1) {DDRB=0xFF;}
 4bc:	8a 81       	ldd	r24, Y+2	; 0x02
 4be:	81 30       	cpi	r24, 0x01	; 1
 4c0:	29 f4       	brne	.+10     	; 0x4cc <DIO_vidSetPortDir+0xa6>
 4c2:	e7 e3       	ldi	r30, 0x37	; 55
 4c4:	f0 e0       	ldi	r31, 0x00	; 0
 4c6:	8f ef       	ldi	r24, 0xFF	; 255
 4c8:	80 83       	st	Z, r24
 4ca:	3e c0       	rjmp	.+124    	; 0x548 <DIO_vidSetPortDir+0x122>
		else if (dir==2) {DDRB=0; PORTB=0xFF;}
 4cc:	8a 81       	ldd	r24, Y+2	; 0x02
 4ce:	82 30       	cpi	r24, 0x02	; 2
 4d0:	d9 f5       	brne	.+118    	; 0x548 <DIO_vidSetPortDir+0x122>
 4d2:	e7 e3       	ldi	r30, 0x37	; 55
 4d4:	f0 e0       	ldi	r31, 0x00	; 0
 4d6:	10 82       	st	Z, r1
 4d8:	e8 e3       	ldi	r30, 0x38	; 56
 4da:	f0 e0       	ldi	r31, 0x00	; 0
 4dc:	8f ef       	ldi	r24, 0xFF	; 255
 4de:	80 83       	st	Z, r24
 4e0:	33 c0       	rjmp	.+102    	; 0x548 <DIO_vidSetPortDir+0x122>
		break;
	case C:
			if (dir==0)      {DDRC=0;}
 4e2:	8a 81       	ldd	r24, Y+2	; 0x02
 4e4:	88 23       	and	r24, r24
 4e6:	21 f4       	brne	.+8      	; 0x4f0 <DIO_vidSetPortDir+0xca>
 4e8:	e4 e3       	ldi	r30, 0x34	; 52
 4ea:	f0 e0       	ldi	r31, 0x00	; 0
 4ec:	10 82       	st	Z, r1
 4ee:	2c c0       	rjmp	.+88     	; 0x548 <DIO_vidSetPortDir+0x122>
			else if (dir==1) {DDRC=0xFF;}
 4f0:	8a 81       	ldd	r24, Y+2	; 0x02
 4f2:	81 30       	cpi	r24, 0x01	; 1
 4f4:	29 f4       	brne	.+10     	; 0x500 <DIO_vidSetPortDir+0xda>
 4f6:	e4 e3       	ldi	r30, 0x34	; 52
 4f8:	f0 e0       	ldi	r31, 0x00	; 0
 4fa:	8f ef       	ldi	r24, 0xFF	; 255
 4fc:	80 83       	st	Z, r24
 4fe:	24 c0       	rjmp	.+72     	; 0x548 <DIO_vidSetPortDir+0x122>
			else if (dir==2) {DDRC=0; PORTC=0xFF;}
 500:	8a 81       	ldd	r24, Y+2	; 0x02
 502:	82 30       	cpi	r24, 0x02	; 2
 504:	09 f5       	brne	.+66     	; 0x548 <DIO_vidSetPortDir+0x122>
 506:	e4 e3       	ldi	r30, 0x34	; 52
 508:	f0 e0       	ldi	r31, 0x00	; 0
 50a:	10 82       	st	Z, r1
 50c:	e5 e3       	ldi	r30, 0x35	; 53
 50e:	f0 e0       	ldi	r31, 0x00	; 0
 510:	8f ef       	ldi	r24, 0xFF	; 255
 512:	80 83       	st	Z, r24
 514:	19 c0       	rjmp	.+50     	; 0x548 <DIO_vidSetPortDir+0x122>
			break;
	case D:
			if (dir==0)      {DDRD=0;}
 516:	8a 81       	ldd	r24, Y+2	; 0x02
 518:	88 23       	and	r24, r24
 51a:	21 f4       	brne	.+8      	; 0x524 <DIO_vidSetPortDir+0xfe>
 51c:	e1 e3       	ldi	r30, 0x31	; 49
 51e:	f0 e0       	ldi	r31, 0x00	; 0
 520:	10 82       	st	Z, r1
 522:	12 c0       	rjmp	.+36     	; 0x548 <DIO_vidSetPortDir+0x122>
			else if (dir==1) {DDRD=0xFF;}
 524:	8a 81       	ldd	r24, Y+2	; 0x02
 526:	81 30       	cpi	r24, 0x01	; 1
 528:	29 f4       	brne	.+10     	; 0x534 <DIO_vidSetPortDir+0x10e>
 52a:	e1 e3       	ldi	r30, 0x31	; 49
 52c:	f0 e0       	ldi	r31, 0x00	; 0
 52e:	8f ef       	ldi	r24, 0xFF	; 255
 530:	80 83       	st	Z, r24
 532:	0a c0       	rjmp	.+20     	; 0x548 <DIO_vidSetPortDir+0x122>
			else if (dir==2) {DDRD=0; PORTD=0xFF;}
 534:	8a 81       	ldd	r24, Y+2	; 0x02
 536:	82 30       	cpi	r24, 0x02	; 2
 538:	39 f4       	brne	.+14     	; 0x548 <DIO_vidSetPortDir+0x122>
 53a:	e1 e3       	ldi	r30, 0x31	; 49
 53c:	f0 e0       	ldi	r31, 0x00	; 0
 53e:	10 82       	st	Z, r1
 540:	e2 e3       	ldi	r30, 0x32	; 50
 542:	f0 e0       	ldi	r31, 0x00	; 0
 544:	8f ef       	ldi	r24, 0xFF	; 255
 546:	80 83       	st	Z, r24
			break;
	}
}
 548:	0f 90       	pop	r0
 54a:	0f 90       	pop	r0
 54c:	0f 90       	pop	r0
 54e:	0f 90       	pop	r0
 550:	cf 91       	pop	r28
 552:	df 91       	pop	r29
 554:	08 95       	ret

00000556 <DIO_vidWriteOnPin>:

void DIO_vidWriteOnPin(uint8 port_no , uint8 pin_no , uint8 level) {
 556:	df 93       	push	r29
 558:	cf 93       	push	r28
 55a:	00 d0       	rcall	.+0      	; 0x55c <DIO_vidWriteOnPin+0x6>
 55c:	00 d0       	rcall	.+0      	; 0x55e <DIO_vidWriteOnPin+0x8>
 55e:	0f 92       	push	r0
 560:	cd b7       	in	r28, 0x3d	; 61
 562:	de b7       	in	r29, 0x3e	; 62
 564:	89 83       	std	Y+1, r24	; 0x01
 566:	6a 83       	std	Y+2, r22	; 0x02
 568:	4b 83       	std	Y+3, r20	; 0x03
	switch(port_no) {
 56a:	89 81       	ldd	r24, Y+1	; 0x01
 56c:	28 2f       	mov	r18, r24
 56e:	30 e0       	ldi	r19, 0x00	; 0
 570:	3d 83       	std	Y+5, r19	; 0x05
 572:	2c 83       	std	Y+4, r18	; 0x04
 574:	8c 81       	ldd	r24, Y+4	; 0x04
 576:	9d 81       	ldd	r25, Y+5	; 0x05
 578:	82 30       	cpi	r24, 0x02	; 2
 57a:	91 05       	cpc	r25, r1
 57c:	09 f4       	brne	.+2      	; 0x580 <DIO_vidWriteOnPin+0x2a>
 57e:	48 c0       	rjmp	.+144    	; 0x610 <DIO_vidWriteOnPin+0xba>
 580:	2c 81       	ldd	r18, Y+4	; 0x04
 582:	3d 81       	ldd	r19, Y+5	; 0x05
 584:	23 30       	cpi	r18, 0x03	; 3
 586:	31 05       	cpc	r19, r1
 588:	34 f4       	brge	.+12     	; 0x596 <DIO_vidWriteOnPin+0x40>
 58a:	8c 81       	ldd	r24, Y+4	; 0x04
 58c:	9d 81       	ldd	r25, Y+5	; 0x05
 58e:	81 30       	cpi	r24, 0x01	; 1
 590:	91 05       	cpc	r25, r1
 592:	71 f0       	breq	.+28     	; 0x5b0 <DIO_vidWriteOnPin+0x5a>
 594:	cb c0       	rjmp	.+406    	; 0x72c <DIO_vidWriteOnPin+0x1d6>
 596:	2c 81       	ldd	r18, Y+4	; 0x04
 598:	3d 81       	ldd	r19, Y+5	; 0x05
 59a:	23 30       	cpi	r18, 0x03	; 3
 59c:	31 05       	cpc	r19, r1
 59e:	09 f4       	brne	.+2      	; 0x5a2 <DIO_vidWriteOnPin+0x4c>
 5a0:	67 c0       	rjmp	.+206    	; 0x670 <DIO_vidWriteOnPin+0x11a>
 5a2:	8c 81       	ldd	r24, Y+4	; 0x04
 5a4:	9d 81       	ldd	r25, Y+5	; 0x05
 5a6:	84 30       	cpi	r24, 0x04	; 4
 5a8:	91 05       	cpc	r25, r1
 5aa:	09 f4       	brne	.+2      	; 0x5ae <DIO_vidWriteOnPin+0x58>
 5ac:	91 c0       	rjmp	.+290    	; 0x6d0 <DIO_vidWriteOnPin+0x17a>
 5ae:	be c0       	rjmp	.+380    	; 0x72c <DIO_vidWriteOnPin+0x1d6>
	case A:
		if (level==0) ClrBit(PORTA,pin_no);
 5b0:	8b 81       	ldd	r24, Y+3	; 0x03
 5b2:	88 23       	and	r24, r24
 5b4:	a9 f4       	brne	.+42     	; 0x5e0 <DIO_vidWriteOnPin+0x8a>
 5b6:	ab e3       	ldi	r26, 0x3B	; 59
 5b8:	b0 e0       	ldi	r27, 0x00	; 0
 5ba:	eb e3       	ldi	r30, 0x3B	; 59
 5bc:	f0 e0       	ldi	r31, 0x00	; 0
 5be:	80 81       	ld	r24, Z
 5c0:	48 2f       	mov	r20, r24
 5c2:	8a 81       	ldd	r24, Y+2	; 0x02
 5c4:	28 2f       	mov	r18, r24
 5c6:	30 e0       	ldi	r19, 0x00	; 0
 5c8:	81 e0       	ldi	r24, 0x01	; 1
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	02 2e       	mov	r0, r18
 5ce:	02 c0       	rjmp	.+4      	; 0x5d4 <DIO_vidWriteOnPin+0x7e>
 5d0:	88 0f       	add	r24, r24
 5d2:	99 1f       	adc	r25, r25
 5d4:	0a 94       	dec	r0
 5d6:	e2 f7       	brpl	.-8      	; 0x5d0 <DIO_vidWriteOnPin+0x7a>
 5d8:	80 95       	com	r24
 5da:	84 23       	and	r24, r20
 5dc:	8c 93       	st	X, r24
 5de:	a6 c0       	rjmp	.+332    	; 0x72c <DIO_vidWriteOnPin+0x1d6>
		else if (level==1) SetBit(PORTA,pin_no);
 5e0:	8b 81       	ldd	r24, Y+3	; 0x03
 5e2:	81 30       	cpi	r24, 0x01	; 1
 5e4:	09 f0       	breq	.+2      	; 0x5e8 <DIO_vidWriteOnPin+0x92>
 5e6:	a2 c0       	rjmp	.+324    	; 0x72c <DIO_vidWriteOnPin+0x1d6>
 5e8:	ab e3       	ldi	r26, 0x3B	; 59
 5ea:	b0 e0       	ldi	r27, 0x00	; 0
 5ec:	eb e3       	ldi	r30, 0x3B	; 59
 5ee:	f0 e0       	ldi	r31, 0x00	; 0
 5f0:	80 81       	ld	r24, Z
 5f2:	48 2f       	mov	r20, r24
 5f4:	8a 81       	ldd	r24, Y+2	; 0x02
 5f6:	28 2f       	mov	r18, r24
 5f8:	30 e0       	ldi	r19, 0x00	; 0
 5fa:	81 e0       	ldi	r24, 0x01	; 1
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	02 2e       	mov	r0, r18
 600:	02 c0       	rjmp	.+4      	; 0x606 <DIO_vidWriteOnPin+0xb0>
 602:	88 0f       	add	r24, r24
 604:	99 1f       	adc	r25, r25
 606:	0a 94       	dec	r0
 608:	e2 f7       	brpl	.-8      	; 0x602 <DIO_vidWriteOnPin+0xac>
 60a:	84 2b       	or	r24, r20
 60c:	8c 93       	st	X, r24
 60e:	8e c0       	rjmp	.+284    	; 0x72c <DIO_vidWriteOnPin+0x1d6>
		break;
	case B:
			if (level==0) ClrBit(PORTB,pin_no);
 610:	8b 81       	ldd	r24, Y+3	; 0x03
 612:	88 23       	and	r24, r24
 614:	a9 f4       	brne	.+42     	; 0x640 <DIO_vidWriteOnPin+0xea>
 616:	a8 e3       	ldi	r26, 0x38	; 56
 618:	b0 e0       	ldi	r27, 0x00	; 0
 61a:	e8 e3       	ldi	r30, 0x38	; 56
 61c:	f0 e0       	ldi	r31, 0x00	; 0
 61e:	80 81       	ld	r24, Z
 620:	48 2f       	mov	r20, r24
 622:	8a 81       	ldd	r24, Y+2	; 0x02
 624:	28 2f       	mov	r18, r24
 626:	30 e0       	ldi	r19, 0x00	; 0
 628:	81 e0       	ldi	r24, 0x01	; 1
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	02 2e       	mov	r0, r18
 62e:	02 c0       	rjmp	.+4      	; 0x634 <DIO_vidWriteOnPin+0xde>
 630:	88 0f       	add	r24, r24
 632:	99 1f       	adc	r25, r25
 634:	0a 94       	dec	r0
 636:	e2 f7       	brpl	.-8      	; 0x630 <DIO_vidWriteOnPin+0xda>
 638:	80 95       	com	r24
 63a:	84 23       	and	r24, r20
 63c:	8c 93       	st	X, r24
 63e:	76 c0       	rjmp	.+236    	; 0x72c <DIO_vidWriteOnPin+0x1d6>
			else if (level==1) SetBit(PORTB,pin_no);
 640:	8b 81       	ldd	r24, Y+3	; 0x03
 642:	81 30       	cpi	r24, 0x01	; 1
 644:	09 f0       	breq	.+2      	; 0x648 <DIO_vidWriteOnPin+0xf2>
 646:	72 c0       	rjmp	.+228    	; 0x72c <DIO_vidWriteOnPin+0x1d6>
 648:	a8 e3       	ldi	r26, 0x38	; 56
 64a:	b0 e0       	ldi	r27, 0x00	; 0
 64c:	e8 e3       	ldi	r30, 0x38	; 56
 64e:	f0 e0       	ldi	r31, 0x00	; 0
 650:	80 81       	ld	r24, Z
 652:	48 2f       	mov	r20, r24
 654:	8a 81       	ldd	r24, Y+2	; 0x02
 656:	28 2f       	mov	r18, r24
 658:	30 e0       	ldi	r19, 0x00	; 0
 65a:	81 e0       	ldi	r24, 0x01	; 1
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	02 2e       	mov	r0, r18
 660:	02 c0       	rjmp	.+4      	; 0x666 <DIO_vidWriteOnPin+0x110>
 662:	88 0f       	add	r24, r24
 664:	99 1f       	adc	r25, r25
 666:	0a 94       	dec	r0
 668:	e2 f7       	brpl	.-8      	; 0x662 <DIO_vidWriteOnPin+0x10c>
 66a:	84 2b       	or	r24, r20
 66c:	8c 93       	st	X, r24
 66e:	5e c0       	rjmp	.+188    	; 0x72c <DIO_vidWriteOnPin+0x1d6>
			break;
	case C:
			if (level==0) ClrBit(PORTC,pin_no);
 670:	8b 81       	ldd	r24, Y+3	; 0x03
 672:	88 23       	and	r24, r24
 674:	a9 f4       	brne	.+42     	; 0x6a0 <DIO_vidWriteOnPin+0x14a>
 676:	a5 e3       	ldi	r26, 0x35	; 53
 678:	b0 e0       	ldi	r27, 0x00	; 0
 67a:	e5 e3       	ldi	r30, 0x35	; 53
 67c:	f0 e0       	ldi	r31, 0x00	; 0
 67e:	80 81       	ld	r24, Z
 680:	48 2f       	mov	r20, r24
 682:	8a 81       	ldd	r24, Y+2	; 0x02
 684:	28 2f       	mov	r18, r24
 686:	30 e0       	ldi	r19, 0x00	; 0
 688:	81 e0       	ldi	r24, 0x01	; 1
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	02 2e       	mov	r0, r18
 68e:	02 c0       	rjmp	.+4      	; 0x694 <DIO_vidWriteOnPin+0x13e>
 690:	88 0f       	add	r24, r24
 692:	99 1f       	adc	r25, r25
 694:	0a 94       	dec	r0
 696:	e2 f7       	brpl	.-8      	; 0x690 <DIO_vidWriteOnPin+0x13a>
 698:	80 95       	com	r24
 69a:	84 23       	and	r24, r20
 69c:	8c 93       	st	X, r24
 69e:	46 c0       	rjmp	.+140    	; 0x72c <DIO_vidWriteOnPin+0x1d6>
			else if (level==1) SetBit(PORTC,pin_no);
 6a0:	8b 81       	ldd	r24, Y+3	; 0x03
 6a2:	81 30       	cpi	r24, 0x01	; 1
 6a4:	09 f0       	breq	.+2      	; 0x6a8 <DIO_vidWriteOnPin+0x152>
 6a6:	42 c0       	rjmp	.+132    	; 0x72c <DIO_vidWriteOnPin+0x1d6>
 6a8:	a5 e3       	ldi	r26, 0x35	; 53
 6aa:	b0 e0       	ldi	r27, 0x00	; 0
 6ac:	e5 e3       	ldi	r30, 0x35	; 53
 6ae:	f0 e0       	ldi	r31, 0x00	; 0
 6b0:	80 81       	ld	r24, Z
 6b2:	48 2f       	mov	r20, r24
 6b4:	8a 81       	ldd	r24, Y+2	; 0x02
 6b6:	28 2f       	mov	r18, r24
 6b8:	30 e0       	ldi	r19, 0x00	; 0
 6ba:	81 e0       	ldi	r24, 0x01	; 1
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	02 2e       	mov	r0, r18
 6c0:	02 c0       	rjmp	.+4      	; 0x6c6 <DIO_vidWriteOnPin+0x170>
 6c2:	88 0f       	add	r24, r24
 6c4:	99 1f       	adc	r25, r25
 6c6:	0a 94       	dec	r0
 6c8:	e2 f7       	brpl	.-8      	; 0x6c2 <DIO_vidWriteOnPin+0x16c>
 6ca:	84 2b       	or	r24, r20
 6cc:	8c 93       	st	X, r24
 6ce:	2e c0       	rjmp	.+92     	; 0x72c <DIO_vidWriteOnPin+0x1d6>
			break;
	case D:
			if (level==0) ClrBit(PORTD,pin_no);
 6d0:	8b 81       	ldd	r24, Y+3	; 0x03
 6d2:	88 23       	and	r24, r24
 6d4:	a9 f4       	brne	.+42     	; 0x700 <DIO_vidWriteOnPin+0x1aa>
 6d6:	a2 e3       	ldi	r26, 0x32	; 50
 6d8:	b0 e0       	ldi	r27, 0x00	; 0
 6da:	e2 e3       	ldi	r30, 0x32	; 50
 6dc:	f0 e0       	ldi	r31, 0x00	; 0
 6de:	80 81       	ld	r24, Z
 6e0:	48 2f       	mov	r20, r24
 6e2:	8a 81       	ldd	r24, Y+2	; 0x02
 6e4:	28 2f       	mov	r18, r24
 6e6:	30 e0       	ldi	r19, 0x00	; 0
 6e8:	81 e0       	ldi	r24, 0x01	; 1
 6ea:	90 e0       	ldi	r25, 0x00	; 0
 6ec:	02 2e       	mov	r0, r18
 6ee:	02 c0       	rjmp	.+4      	; 0x6f4 <DIO_vidWriteOnPin+0x19e>
 6f0:	88 0f       	add	r24, r24
 6f2:	99 1f       	adc	r25, r25
 6f4:	0a 94       	dec	r0
 6f6:	e2 f7       	brpl	.-8      	; 0x6f0 <DIO_vidWriteOnPin+0x19a>
 6f8:	80 95       	com	r24
 6fa:	84 23       	and	r24, r20
 6fc:	8c 93       	st	X, r24
 6fe:	16 c0       	rjmp	.+44     	; 0x72c <DIO_vidWriteOnPin+0x1d6>
			else if (level==1) SetBit(PORTD,pin_no);
 700:	8b 81       	ldd	r24, Y+3	; 0x03
 702:	81 30       	cpi	r24, 0x01	; 1
 704:	99 f4       	brne	.+38     	; 0x72c <DIO_vidWriteOnPin+0x1d6>
 706:	a2 e3       	ldi	r26, 0x32	; 50
 708:	b0 e0       	ldi	r27, 0x00	; 0
 70a:	e2 e3       	ldi	r30, 0x32	; 50
 70c:	f0 e0       	ldi	r31, 0x00	; 0
 70e:	80 81       	ld	r24, Z
 710:	48 2f       	mov	r20, r24
 712:	8a 81       	ldd	r24, Y+2	; 0x02
 714:	28 2f       	mov	r18, r24
 716:	30 e0       	ldi	r19, 0x00	; 0
 718:	81 e0       	ldi	r24, 0x01	; 1
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	02 2e       	mov	r0, r18
 71e:	02 c0       	rjmp	.+4      	; 0x724 <DIO_vidWriteOnPin+0x1ce>
 720:	88 0f       	add	r24, r24
 722:	99 1f       	adc	r25, r25
 724:	0a 94       	dec	r0
 726:	e2 f7       	brpl	.-8      	; 0x720 <DIO_vidWriteOnPin+0x1ca>
 728:	84 2b       	or	r24, r20
 72a:	8c 93       	st	X, r24
			break;
	}
}
 72c:	0f 90       	pop	r0
 72e:	0f 90       	pop	r0
 730:	0f 90       	pop	r0
 732:	0f 90       	pop	r0
 734:	0f 90       	pop	r0
 736:	cf 91       	pop	r28
 738:	df 91       	pop	r29
 73a:	08 95       	ret

0000073c <DIO_vidWriteOnPort>:

void DIO_vidWriteOnPort(uint8 port_no , uint8 level) {
 73c:	df 93       	push	r29
 73e:	cf 93       	push	r28
 740:	00 d0       	rcall	.+0      	; 0x742 <DIO_vidWriteOnPort+0x6>
 742:	00 d0       	rcall	.+0      	; 0x744 <DIO_vidWriteOnPort+0x8>
 744:	cd b7       	in	r28, 0x3d	; 61
 746:	de b7       	in	r29, 0x3e	; 62
 748:	89 83       	std	Y+1, r24	; 0x01
 74a:	6a 83       	std	Y+2, r22	; 0x02
	switch (port_no){
 74c:	89 81       	ldd	r24, Y+1	; 0x01
 74e:	28 2f       	mov	r18, r24
 750:	30 e0       	ldi	r19, 0x00	; 0
 752:	3c 83       	std	Y+4, r19	; 0x04
 754:	2b 83       	std	Y+3, r18	; 0x03
 756:	8b 81       	ldd	r24, Y+3	; 0x03
 758:	9c 81       	ldd	r25, Y+4	; 0x04
 75a:	82 30       	cpi	r24, 0x02	; 2
 75c:	91 05       	cpc	r25, r1
 75e:	d9 f0       	breq	.+54     	; 0x796 <DIO_vidWriteOnPort+0x5a>
 760:	2b 81       	ldd	r18, Y+3	; 0x03
 762:	3c 81       	ldd	r19, Y+4	; 0x04
 764:	23 30       	cpi	r18, 0x03	; 3
 766:	31 05       	cpc	r19, r1
 768:	34 f4       	brge	.+12     	; 0x776 <DIO_vidWriteOnPort+0x3a>
 76a:	8b 81       	ldd	r24, Y+3	; 0x03
 76c:	9c 81       	ldd	r25, Y+4	; 0x04
 76e:	81 30       	cpi	r24, 0x01	; 1
 770:	91 05       	cpc	r25, r1
 772:	61 f0       	breq	.+24     	; 0x78c <DIO_vidWriteOnPort+0x50>
 774:	1e c0       	rjmp	.+60     	; 0x7b2 <DIO_vidWriteOnPort+0x76>
 776:	2b 81       	ldd	r18, Y+3	; 0x03
 778:	3c 81       	ldd	r19, Y+4	; 0x04
 77a:	23 30       	cpi	r18, 0x03	; 3
 77c:	31 05       	cpc	r19, r1
 77e:	81 f0       	breq	.+32     	; 0x7a0 <DIO_vidWriteOnPort+0x64>
 780:	8b 81       	ldd	r24, Y+3	; 0x03
 782:	9c 81       	ldd	r25, Y+4	; 0x04
 784:	84 30       	cpi	r24, 0x04	; 4
 786:	91 05       	cpc	r25, r1
 788:	81 f0       	breq	.+32     	; 0x7aa <DIO_vidWriteOnPort+0x6e>
 78a:	13 c0       	rjmp	.+38     	; 0x7b2 <DIO_vidWriteOnPort+0x76>
			case A:
					PORTA=level;
 78c:	eb e3       	ldi	r30, 0x3B	; 59
 78e:	f0 e0       	ldi	r31, 0x00	; 0
 790:	8a 81       	ldd	r24, Y+2	; 0x02
 792:	80 83       	st	Z, r24
 794:	0e c0       	rjmp	.+28     	; 0x7b2 <DIO_vidWriteOnPort+0x76>
					break;
			case B:
					PORTB=level;
 796:	e8 e3       	ldi	r30, 0x38	; 56
 798:	f0 e0       	ldi	r31, 0x00	; 0
 79a:	8a 81       	ldd	r24, Y+2	; 0x02
 79c:	80 83       	st	Z, r24
 79e:	09 c0       	rjmp	.+18     	; 0x7b2 <DIO_vidWriteOnPort+0x76>
					break;
			case C:
					PORTC=level;
 7a0:	e5 e3       	ldi	r30, 0x35	; 53
 7a2:	f0 e0       	ldi	r31, 0x00	; 0
 7a4:	8a 81       	ldd	r24, Y+2	; 0x02
 7a6:	80 83       	st	Z, r24
 7a8:	04 c0       	rjmp	.+8      	; 0x7b2 <DIO_vidWriteOnPort+0x76>
					break;
			case D:
					PORTD=level;
 7aa:	e2 e3       	ldi	r30, 0x32	; 50
 7ac:	f0 e0       	ldi	r31, 0x00	; 0
 7ae:	8a 81       	ldd	r24, Y+2	; 0x02
 7b0:	80 83       	st	Z, r24
					break;
		}
}
 7b2:	0f 90       	pop	r0
 7b4:	0f 90       	pop	r0
 7b6:	0f 90       	pop	r0
 7b8:	0f 90       	pop	r0
 7ba:	cf 91       	pop	r28
 7bc:	df 91       	pop	r29
 7be:	08 95       	ret

000007c0 <DIO_u8ReadFromPin>:
				else if (level==1) {PORTD=0xFF;}
				break;
	}
}*/

uint8 DIO_u8ReadFromPin(uint8 port_no , uint8 pin_no) {
 7c0:	df 93       	push	r29
 7c2:	cf 93       	push	r28
 7c4:	00 d0       	rcall	.+0      	; 0x7c6 <DIO_u8ReadFromPin+0x6>
 7c6:	00 d0       	rcall	.+0      	; 0x7c8 <DIO_u8ReadFromPin+0x8>
 7c8:	0f 92       	push	r0
 7ca:	cd b7       	in	r28, 0x3d	; 61
 7cc:	de b7       	in	r29, 0x3e	; 62
 7ce:	8a 83       	std	Y+2, r24	; 0x02
 7d0:	6b 83       	std	Y+3, r22	; 0x03
	uint8 temp;
	switch(port_no) {
 7d2:	8a 81       	ldd	r24, Y+2	; 0x02
 7d4:	28 2f       	mov	r18, r24
 7d6:	30 e0       	ldi	r19, 0x00	; 0
 7d8:	3d 83       	std	Y+5, r19	; 0x05
 7da:	2c 83       	std	Y+4, r18	; 0x04
 7dc:	8c 81       	ldd	r24, Y+4	; 0x04
 7de:	9d 81       	ldd	r25, Y+5	; 0x05
 7e0:	82 30       	cpi	r24, 0x02	; 2
 7e2:	91 05       	cpc	r25, r1
 7e4:	d9 f0       	breq	.+54     	; 0x81c <DIO_u8ReadFromPin+0x5c>
 7e6:	2c 81       	ldd	r18, Y+4	; 0x04
 7e8:	3d 81       	ldd	r19, Y+5	; 0x05
 7ea:	23 30       	cpi	r18, 0x03	; 3
 7ec:	31 05       	cpc	r19, r1
 7ee:	34 f4       	brge	.+12     	; 0x7fc <DIO_u8ReadFromPin+0x3c>
 7f0:	8c 81       	ldd	r24, Y+4	; 0x04
 7f2:	9d 81       	ldd	r25, Y+5	; 0x05
 7f4:	81 30       	cpi	r24, 0x01	; 1
 7f6:	91 05       	cpc	r25, r1
 7f8:	61 f0       	breq	.+24     	; 0x812 <DIO_u8ReadFromPin+0x52>
 7fa:	1e c0       	rjmp	.+60     	; 0x838 <DIO_u8ReadFromPin+0x78>
 7fc:	2c 81       	ldd	r18, Y+4	; 0x04
 7fe:	3d 81       	ldd	r19, Y+5	; 0x05
 800:	23 30       	cpi	r18, 0x03	; 3
 802:	31 05       	cpc	r19, r1
 804:	81 f0       	breq	.+32     	; 0x826 <DIO_u8ReadFromPin+0x66>
 806:	8c 81       	ldd	r24, Y+4	; 0x04
 808:	9d 81       	ldd	r25, Y+5	; 0x05
 80a:	84 30       	cpi	r24, 0x04	; 4
 80c:	91 05       	cpc	r25, r1
 80e:	81 f0       	breq	.+32     	; 0x830 <DIO_u8ReadFromPin+0x70>
 810:	13 c0       	rjmp	.+38     	; 0x838 <DIO_u8ReadFromPin+0x78>
		case A:
				temp=PINA;
 812:	e9 e3       	ldi	r30, 0x39	; 57
 814:	f0 e0       	ldi	r31, 0x00	; 0
 816:	80 81       	ld	r24, Z
 818:	89 83       	std	Y+1, r24	; 0x01
 81a:	0e c0       	rjmp	.+28     	; 0x838 <DIO_u8ReadFromPin+0x78>
				break;
		case B:
				temp=PINB;
 81c:	e6 e3       	ldi	r30, 0x36	; 54
 81e:	f0 e0       	ldi	r31, 0x00	; 0
 820:	80 81       	ld	r24, Z
 822:	89 83       	std	Y+1, r24	; 0x01
 824:	09 c0       	rjmp	.+18     	; 0x838 <DIO_u8ReadFromPin+0x78>
				break;
		case C:
				temp=PINC;
 826:	e3 e3       	ldi	r30, 0x33	; 51
 828:	f0 e0       	ldi	r31, 0x00	; 0
 82a:	80 81       	ld	r24, Z
 82c:	89 83       	std	Y+1, r24	; 0x01
 82e:	04 c0       	rjmp	.+8      	; 0x838 <DIO_u8ReadFromPin+0x78>
				break;
		case D:
				temp=PIND;
 830:	e0 e3       	ldi	r30, 0x30	; 48
 832:	f0 e0       	ldi	r31, 0x00	; 0
 834:	80 81       	ld	r24, Z
 836:	89 83       	std	Y+1, r24	; 0x01
				break;
		default : //Do Nothing
				break;
		}
	return temp;
 838:	89 81       	ldd	r24, Y+1	; 0x01
}
 83a:	0f 90       	pop	r0
 83c:	0f 90       	pop	r0
 83e:	0f 90       	pop	r0
 840:	0f 90       	pop	r0
 842:	0f 90       	pop	r0
 844:	cf 91       	pop	r28
 846:	df 91       	pop	r29
 848:	08 95       	ret

0000084a <DIO_u8ReadFromPort>:

uint8 DIO_u8ReadFromPort(uint8 port_no) {
 84a:	df 93       	push	r29
 84c:	cf 93       	push	r28
 84e:	00 d0       	rcall	.+0      	; 0x850 <DIO_u8ReadFromPort+0x6>
 850:	00 d0       	rcall	.+0      	; 0x852 <DIO_u8ReadFromPort+0x8>
 852:	cd b7       	in	r28, 0x3d	; 61
 854:	de b7       	in	r29, 0x3e	; 62
 856:	8a 83       	std	Y+2, r24	; 0x02
	uint8 temp;
	switch(port_no) {
 858:	8a 81       	ldd	r24, Y+2	; 0x02
 85a:	28 2f       	mov	r18, r24
 85c:	30 e0       	ldi	r19, 0x00	; 0
 85e:	3c 83       	std	Y+4, r19	; 0x04
 860:	2b 83       	std	Y+3, r18	; 0x03
 862:	8b 81       	ldd	r24, Y+3	; 0x03
 864:	9c 81       	ldd	r25, Y+4	; 0x04
 866:	82 30       	cpi	r24, 0x02	; 2
 868:	91 05       	cpc	r25, r1
 86a:	d9 f0       	breq	.+54     	; 0x8a2 <__stack+0x43>
 86c:	2b 81       	ldd	r18, Y+3	; 0x03
 86e:	3c 81       	ldd	r19, Y+4	; 0x04
 870:	23 30       	cpi	r18, 0x03	; 3
 872:	31 05       	cpc	r19, r1
 874:	34 f4       	brge	.+12     	; 0x882 <__stack+0x23>
 876:	8b 81       	ldd	r24, Y+3	; 0x03
 878:	9c 81       	ldd	r25, Y+4	; 0x04
 87a:	81 30       	cpi	r24, 0x01	; 1
 87c:	91 05       	cpc	r25, r1
 87e:	61 f0       	breq	.+24     	; 0x898 <__stack+0x39>
 880:	1e c0       	rjmp	.+60     	; 0x8be <__stack+0x5f>
 882:	2b 81       	ldd	r18, Y+3	; 0x03
 884:	3c 81       	ldd	r19, Y+4	; 0x04
 886:	23 30       	cpi	r18, 0x03	; 3
 888:	31 05       	cpc	r19, r1
 88a:	81 f0       	breq	.+32     	; 0x8ac <__stack+0x4d>
 88c:	8b 81       	ldd	r24, Y+3	; 0x03
 88e:	9c 81       	ldd	r25, Y+4	; 0x04
 890:	84 30       	cpi	r24, 0x04	; 4
 892:	91 05       	cpc	r25, r1
 894:	81 f0       	breq	.+32     	; 0x8b6 <__stack+0x57>
 896:	13 c0       	rjmp	.+38     	; 0x8be <__stack+0x5f>
		case A:
				temp=PINA;
 898:	e9 e3       	ldi	r30, 0x39	; 57
 89a:	f0 e0       	ldi	r31, 0x00	; 0
 89c:	80 81       	ld	r24, Z
 89e:	89 83       	std	Y+1, r24	; 0x01
 8a0:	0e c0       	rjmp	.+28     	; 0x8be <__stack+0x5f>
				break;
		case B:
				temp=PINB;
 8a2:	e6 e3       	ldi	r30, 0x36	; 54
 8a4:	f0 e0       	ldi	r31, 0x00	; 0
 8a6:	80 81       	ld	r24, Z
 8a8:	89 83       	std	Y+1, r24	; 0x01
 8aa:	09 c0       	rjmp	.+18     	; 0x8be <__stack+0x5f>
				break;
		case C:
				temp=PINC;
 8ac:	e3 e3       	ldi	r30, 0x33	; 51
 8ae:	f0 e0       	ldi	r31, 0x00	; 0
 8b0:	80 81       	ld	r24, Z
 8b2:	89 83       	std	Y+1, r24	; 0x01
 8b4:	04 c0       	rjmp	.+8      	; 0x8be <__stack+0x5f>
				break;
		case D:
				temp=PIND;
 8b6:	e0 e3       	ldi	r30, 0x30	; 48
 8b8:	f0 e0       	ldi	r31, 0x00	; 0
 8ba:	80 81       	ld	r24, Z
 8bc:	89 83       	std	Y+1, r24	; 0x01
				break;

		default : //Do Nothing
				break;
		}
	return temp;
 8be:	89 81       	ldd	r24, Y+1	; 0x01
}
 8c0:	0f 90       	pop	r0
 8c2:	0f 90       	pop	r0
 8c4:	0f 90       	pop	r0
 8c6:	0f 90       	pop	r0
 8c8:	cf 91       	pop	r28
 8ca:	df 91       	pop	r29
 8cc:	08 95       	ret

000008ce <main>:
 */
#include "StdTypes.h"
#include "DIODrv.h"

int main ()
{
 8ce:	df 93       	push	r29
 8d0:	cf 93       	push	r28
 8d2:	cd b7       	in	r28, 0x3d	; 61
 8d4:	de b7       	in	r29, 0x3e	; 62
	DIO_vidSetPortDir(B,OUTPUT);
 8d6:	82 e0       	ldi	r24, 0x02	; 2
 8d8:	61 e0       	ldi	r22, 0x01	; 1
 8da:	0e 94 13 02 	call	0x426	; 0x426 <DIO_vidSetPortDir>
	while (1)
	{
		DIO_vidWriteOnPort(B,50);
 8de:	82 e0       	ldi	r24, 0x02	; 2
 8e0:	62 e3       	ldi	r22, 0x32	; 50
 8e2:	0e 94 9e 03 	call	0x73c	; 0x73c <DIO_vidWriteOnPort>
 8e6:	fb cf       	rjmp	.-10     	; 0x8de <main+0x10>

000008e8 <_exit>:
 8e8:	f8 94       	cli

000008ea <__stop_program>:
 8ea:	ff cf       	rjmp	.-2      	; 0x8ea <__stop_program>
